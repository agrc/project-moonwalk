name: Release Events

on:
  release:
    types: [published]

concurrency:
  group: '${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  deploy-cloudrun-prod:
    name: Deploy python production
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    environment:
      name: prod
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: üöÄ Deploy
        uses: ./.github/actions/deploy-cloudrun
        timeout-minutes: 15
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          agol_org: ${{ vars.AGOL_ORG }}
          tag_name: ${{ vars.TAG_NAME }}

  deploy-firebase-prod:
    name: Deploy Firebase project to production
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://ut-dts-agrc-moonwalk-prod.web.app/
    if: github.event.release.prerelease == false

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: üöÄ Deploy
        uses: ./.github/actions/deploy-firebase
        with:
          identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project_id: ${{ secrets.PROJECT_ID }}
          build_command: npm run build -- --mode production
          firebase_config: ${{ secrets.FIREBASE_CONFIG }}

  notify:
    name: Notifications
    runs-on: ubuntu-latest
    needs: [deploy-cloudrun-prod, deploy-firebase-prod]
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Release Notifier
        uses: agrc/release-issue-notifications-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
